'''
ВНИМАНИЕ! Это пустышка, интерфейс для ЗИМНЕГО прототипа с обработчиком текста и изображений. ОБРАТИТЕСЬ к файлу demo.py для осенней демоверсии.
'''

import streamlit as st
import statement as stm
import pandas as pd
x = 4.71524
pict = ['mdp(M, A, B), col(M, A, B), col(A, B), col(B, C), col(C, A)']
txt = ['mdp(M, A, B), col(M, A, B), col(A, B), col(C, A)']
fin = ['col(A,B)', 'col(B,C)', 'col(C,D)', 'col(A,D)', 'col(C,M)', 'mdp(M,A,D)', 'mdp(K,B,C)', 'mdp(H,D,C)', 'mdp(P,A,B)', 'mdp(F,P,H)', 'col(F,K,M)', 'eql(B,K,C,K)', 'eql(A,P,B,P)', 'eql(A,M,D,M)', 'eql(C,H,D,H)', 'eql(H,F,P,F)', 'prl(P,K,A,C)', 'prl(P,M,B,D)', 'prl(M,H,A,C)', 'prl(K,H,B,D)', 'eqa(A,C,F,K,M,H,F,K)', 'eqa(A,C,M,F,K,P,M,F)', 'eqa(B,D,C,M,K,H,C,M)', 'eqa(B,D,M,F,K,H,M,F)', 'eqa(B,D,F,K,M,P,F,K)', 'prl(M,H,P,K)', 'prl(K,H,P,M)', 'mdp(F,M,K)', 'eql(K,F,M,F)']
st.title('Прототип приложения "Нейрогеометрия"')
a, b = st.columns(2)
st.sidebar.title('Настройки модели')
st.sidebar.slider('Глубина прямого хода, h', 0, 10)
st.sidebar.slider('Коэффициент эвристики, ε', 1, 4)
st.sidebar.slider('Рекурсивное обратное расстояние, r', 0, 5)
st.sidebar.multiselect('Выбор приоритетных методов решения', ['Прямое распространение', 'Обратный ход', 'Эвристический', 'Метод Ву'])
st.sidebar.header('Техническая информация')
st.sidebar.subheader('Обнаруженные предикаты')
if st.sidebar.checkbox('Показать'):
    st.sidebar.write('Чертёж')
    st.sidebar.write(pict)
    st.sidebar.write('Текст')
    st.sidebar.write(txt)
    st.sidebar.write('Соответствие', 80, '%')
st.sidebar.write(f'Время выполнения: {x} секунд')
with a:
    if not st.checkbox('Не использовать рисунок'):
        st.file_uploader('Загрузите чертёж к задаче')
    st.button('Подтвердить', disabled=True)
with b:
    state = st.text_area('Введите условие задачи', value='Дан выпуклый четырёхугольник ABCD. Отрезки LN и KM соединяют середины противоположных сторон. ')
    if st.button('Ручной ввод предикатов'):
        st.write('Краткий справочник пользователя по предикатному вводу. Это гиперссылка. Как и все объекты.')
    if st.checkbox('Распознание картинки (beta)'):
        st.file_uploader('Выбран бета-режим загрузки условия. Предоставьте скриншот.')
st.text_input('Введите вопрос на доказательство (пункт a): ', value='Докажите, что LN и KM делят друг друга пополам. ')
st.text_input('Введите вопрос на вычисление (пункт б): ', value='-')
if st.button('Решить'):
    st.header('Решение')
    tab0, tab1, tab2 = st.tabs(["Рекомендации", "Подробное решение пункта а)", "Подробное решение пукнта б)"])
    with tab0:
        st.write('Теорема о средней линии')
        st.write('Паралеллограмм Вариьона')
    with tab1:
        st.write('1. По *теореме о средней линии треугольника*: ')
        st.write('Отрезок, соединяющий точки P и K, является средней линией и параллелен стороне AC.')
        st.write('Отрезок, соединяющий точки P и M, является средней линией и параллелен стороне BD.')
        st.write('Отрезок, соединяющий точки M и H, является средней линией и параллелен стороне AC.')
        st.write('Отрезок, соединяющий точки K и H, является средней линией и параллелен стороне BD.')
        st.write('2. По свойству транзитивности: ')
        st.write('Две прямые HM, KP параллельные AC - параллельны между собой.')
        st.write('Две прямые HK, MP параллельные BD - параллельны между собой.')
        st.write('3. По *признаку параллелограмма*: ')
        st.write('Если в 4-угольнике две пары противоположных сторон попарно параллельны, и одна из диагоналей точкой пересечения делятся пополам, то и вторая тоже. ')
        st.write('Доказательство завершено.')
    with tab2:
        st.write('ахахахаа, нет.')
        st.button('Показать обнаруженные закономерности между сущностями задачи') # Какие треугольники подобны, какие равны, в каком отношении находятся отрезки и т.п.
    st.button('Экспорт решения в .pdf')
if st.checkbox('Показать финальные предикаты'):
    st.write(fin)
if st.button('Провести полное исследование'):
    st.write('Середины: Равные отрезки:')
if st.button('Просмотреть исследовательский датафрейм:'):
    st.write(pd.read_csv('geom.csv'))
